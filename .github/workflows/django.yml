name: Django CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
    - uses: actions/checkout@v2
    - name: Install system package
      run: sudo apt update && sudo apt install -y libldap2-dev libsasl2-dev zlib1g-dev make build-essential libssl-dev libbz2-dev libreadline-dev libsqlite3-dev wget llvm libncurses5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev liblzma-dev libffi-dev git python3-dateutil ttf-bitstream-vera redis-server nodejs python3-pip libpangocairo-1.0-0
    - name: Setup postgresql
      run: |
        psql "postgresql://postgres:postgres@localhost/template1" -c "CREATE EXTENSION unaccent;"
        psql "postgresql://postgres:postgres@localhost" -c "CREATE DATABASE happyschool;"
        psql "postgresql://postgres:postgres@localhost" -c "CREATE USER happyschool WITH PASSWORD 'libreschool';"
        psql "postgresql://postgres:postgres@localhost" -c "ALTER USER happyschool CREATEDB;"
    - name: Install python version
      uses: gabrielfalcao/pyenv-action@v8
      with:
        default: "3.7.5"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install --dev
        pipenv run seleniumbase install geckodriver
        npm install webpack-cli
        npm install
    - name: Prepare project
      run: |
        cp happyschool/settings.example.py happyschool/settings.py
        sed -i 's/DEBUG = False/DEBUG = True/g' happyschool/settings.py
        pipenv run ./manage.py makemigrations && pipenv run ./manage.py migrate
        ./node_modules/.bin/webpack --config webpack.prod.js
      env:
        DB_NAME: happyschool
        DB_USER: happyschool
        DB_PASSWORD: libreschool
    - name: Run Tests
      run: |
        npx eslint --ext .js,.vue assets/
        pipenv run coverage run --source='.' manage.py test
        pipenv run coverage report
      env:
        DB_NAME: happyschool
        DB_USER: happyschool
        DB_PASSWORD: libreschool
