# Generated by Django 2.2.19 on 2021-05-11 10:11

from django.db import migrations
from django.conf import settings


def use_tenure_visibility(apps, schema_editor):
    CasEleve = apps.get_model("dossier_eleve", "CasEleve")
    DossierEleveSettingsModel = apps.get_model("dossier_eleve", "DossierEleveSettingsModel")
    Group = apps.get_model("auth", "Group")

    # Dossier eleve has not been initialized.
    if DossierEleveSettingsModel.objects.count() == 0:
        return

    dossier_settings = DossierEleveSettingsModel.objects.first()
    if dossier_settings.filter_teacher_entries_by_tenure:
        # Tenure visibility has been used.
        # Copy teacher visibility.
        dossier_settings.tenure_allow_visibility_to.set(
            dossier_settings.teacher_allow_visibility_to.all()
        )
        dossier_settings.tenure_force_visibility_to.set(
            dossier_settings.teacher_force_visibility_to.all()
        )
        dossier_settings.save()
        # Remove permissions from teachers visibility.
        dossier_settings.teacher_allow_visibility_to.clear()
        dossier_settings.teacher_force_visibility_to.clear()
        dossier_settings.save()

        # Reset visible_by_tenure for all info cas as it should not be used anymore.
        for c in CasEleve.objects.filter(info__isnull=False):
            c.visible_by_tenure = False
            c.save()
        # For Cas with teacher visibility replace it with tenure visibility.
        teacher_group = Group.objects.get(name=settings.TEACHER_GROUP)
        cas_with_teacher_vis = CasEleve.objects.filter(visible_by_groups=teacher_group)
        for c in cas_with_teacher_vis:
            c.visible_by_tenure = True
            c.visible_by_groups.remove(teacher_group)
            c.save()


class Migration(migrations.Migration):

    dependencies = [
        ('dossier_eleve', '0015_auto_20210511_0955'),
    ]

    operations = [
        migrations.RunPython(use_tenure_visibility),
    ]
